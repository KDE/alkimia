@PACKAGE_INIT@

list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}")

include(CMakeFindDependencyMacro)

if("@BUILD_QT4@" STREQUAL "ON" OR "@BUILD_QT4@" STREQUAL "1")
    find_package(Qt4 COMPONENTS QtCore QtDBus @QT_NETWORK_LIB@)
else()
    find_dependency(Qt@QT_MAJOR_VERSION@Core)
    find_dependency(Qt@QT_MAJOR_VERSION@DBus)
    if (@BUILD_WITH_WEBENGINE@)
        find_dependency(Qt@QT_MAJOR_VERSION@WebEngineWidgets @QT_MAJOR_VERSION@.@QT_MINOR_VERSION@.0)
    elseif (@QT_BROWSER_LIB@)
        find_dependency(@QT_BROWSER_LIB@)
    endif()
    if (@QT_NETWORK_LIB@)
        find_dependency(@QT_NETWORK_LIB@)
    endif()
endif()
find_dependency(@MP_CMAKE_MODULE@)

if (NOT @BUILD_SHARED_LIBS@)
    find_dependency(KF5Completion)
    find_dependency(KF5I18n)
    find_dependency(KF5NewStuff)
    find_dependency(KF5IconThemes)
    find_dependency(KF5TextWidgets)
    if(NOT @BUILD_WITH_QTNETWORK@)
        find_dependency(KF5KIO)
    endif()
endif()

include("${CMAKE_CURRENT_LIST_DIR}/LibAlkimia@ALKIMIA_PATH_SUFFIX@Targets.cmake")

set_and_check(LIBALKIMIA_INCLUDE_DIR "@PACKAGE_INCLUDE_INSTALL_DIR@")
set_property(TARGET Alkimia::alkimia PROPERTY INTERFACE_INCLUDE_DIRECTORIES "@PACKAGE_INCLUDE_INSTALL_DIR@" ${@MP_CMAKE_MODULE@_INCLUDE_DIR})
set_property(TARGET Alkimia::alkimia PROPERTY INTERFACE_COMPILE_OPTIONS "@PACKAGE_COMPILE_OPTIONS@")
message(STATUS "Found LibAlkimia: ${CMAKE_CURRENT_LIST_DIR}/LibAlkimia@ALKIMIA_PATH_SUFFIX@Config.cmake (found version \"@ALKIMIA_LIB_VERSION@\")")
